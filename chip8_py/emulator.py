class Emulator:
    # fmt: off
    DIGITS = [
        0xF0, 0x90, 0x90, 0x90, 0xF0,  # 0
        0x20, 0x60, 0x20, 0x20, 0x70,  # 1
        0xF0, 0x10, 0xF0, 0x80, 0xF0,  # 2
        0xF0, 0x10, 0xF0, 0x10, 0xF0,  # 3
        0x90, 0x90, 0xF0, 0x10, 0x10,  # 4
        0xF0, 0x80, 0xF0, 0x10, 0xF0,  # 5
        0xF0, 0x80, 0xF0, 0x90, 0xF0,  # 6
        0xF0, 0x10, 0x20, 0x40, 0x40,  # 7
        0xF0, 0x90, 0xF0, 0x90, 0xF0,  # 8
        0xF0, 0x90, 0xF0, 0x10, 0xF0,  # 9
        0xF0, 0x90, 0xF0, 0x90, 0x90,  # A
        0xE0, 0x90, 0xE0, 0x90, 0xE0,  # B
        0xF0, 0x80, 0x80, 0x80, 0xF0,  # C
        0xE0, 0x90, 0x90, 0x90, 0xE0,  # D
        0xF0, 0x80, 0xF0, 0x80, 0xF0,  # E
        0xF0, 0x80, 0xF0, 0x80, 0x80,  # F
    ]
    # fmt: on

    def __init__(self):
        self.memory = bytearray(4096)
        self.registers = bytearray(16)
        self.stack = bytearray(16)

        for i in range(60):
            self.memory[i] = Emulator.DIGITS[i]
        print(self.memory[0:0x200])

        self.index = 0  # Index register
        self.pc = 0x200  # Program counter
        self.sp = 0  # Stack pointer

    def load_rom(self, file_path: str) -> None:
        with open(file_path, "rb") as file:
            self.memory[0x200:] = file.read()

    def run(self) -> None:
        ...
        # print(self.memory[0x200:])
